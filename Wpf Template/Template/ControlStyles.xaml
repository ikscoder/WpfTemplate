<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:local="clr-namespace:Wpf_Template"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">
    <!--#region TemplateGeometry-->
    <Geometry x:Key="Settings">M9.3299972,10.196C7.4389917,10.196 5.9029972,11.733995 5.9029972,13.625001 5.9029972,15.513002 7.4389917,17.052004 9.3299972,17.052004 11.221995,17.052004 12.759988,15.513002 12.759988,13.625001 12.759988,11.733995 11.221995,10.196 9.3299972,10.196z M25.036991,4.377991C24.703983,4.3849948 24.367985,4.4579928 24.044987,4.6029971 22.758991,5.179993 22.180988,6.6969917 22.758991,7.9839943 23.335987,9.2709973 24.853993,9.8459943 26.141985,9.2700055 27.427981,8.6889966 28.005984,7.1759956 27.427981,5.8860024 26.994982,4.9219974 26.033983,4.3560031 25.036991,4.377991z M7.7989923,4.3000033L10.934,4.3000033 11.100001,7.1640022 11.100001,7.265992C11.617991,7.4080055,12.108988,7.6109932,12.566996,7.867997L12.626992,7.8079994 14.83799,5.9499977 17.055992,8.1689923 15.147988,10.311998 15.081993,10.378999C15.341988,10.836992,15.544991,11.330003,15.688988,11.847993L15.771996,11.847993 18.646994,12.097993 18.646994,15.233995 15.782997,15.401994 15.688988,15.401994C15.544991,15.918001,15.341988,16.410998,15.081993,16.867998L15.139992,16.927004 16.996987,19.136996 14.779,21.354998 12.635995,19.448 12.566996,19.379C12.108988,19.636996,11.617991,19.839007,11.100001,19.981997L11.100001,20.073 10.934,22.948 7.7989923,22.948 7.5469934,20.082995 7.5469934,19.979998C7.0319945,19.836001,6.5420043,19.632998,6.0870029,19.375002L6.0200016,19.440996 3.8690013,21.354998 1.6519919,19.136996 3.499998,16.935 3.5760021,16.860995C3.3189988,16.403994,3.1170029,15.914995,2.9730057,15.401994L2.8749985,15.401994 0,15.233995 0,12.097993 2.8639969,11.847993 2.9730057,11.847993C3.1170029,11.332994,3.3189988,10.843995,3.5760021,10.388002L3.5059947,10.319993 1.5939932,8.1689923 3.8099956,5.9499977 6.0140049,7.8000038 6.0870029,7.8719948C6.5420043,7.6159981,7.0319945,7.4129952,7.5469934,7.268998L7.5469934,7.1750038z M26.443987,0L28.629976,0.83000182 28.045992,2.8970037 28.017977,2.9689947C28.332979,3.1989902,28.619997,3.4709933,28.876986,3.7769933L28.938997,3.7469945 30.974976,3.0419927 31.932984,5.1770022 30.03598,6.1660011 29.96698,6.1959999C30.026978,6.5939949,30.037995,6.9889992,30.001984,7.3789986L30.060974,7.4019936 32,8.3410047 31.168976,10.526994 29.126986,9.8860028 29.06,9.8609937C28.827974,10.175996,28.556002,10.464006,28.247988,10.720994L28.274996,10.778993 28.98099,12.813997 26.84598,13.770997 25.85599,11.871995 25.826983,11.808C25.430988,11.867997,25.032993,11.880006,24.642994,11.843995L24.619984,11.899995 23.682987,13.839006 21.494986,13.009004 22.138996,10.964006 22.162983,10.899995C21.847996,10.666993,21.560995,10.392,21.302984,10.086L21.243994,10.112001 19.233984,10.877 18.276983,8.7429975 20.147986,7.6949928 20.220984,7.6640022C20.160986,7.2669991,20.149985,6.8719948,20.185995,6.4819954L20.121985,6.4579933 18.160986,5.578995 18.991995,3.3929906 21.056997,3.9770055 21.131994,4.0050052C21.363989,3.6920016,21.634983,3.4059909,21.939991,3.1519933L21.910984,3.0829931 21.144995,1.074997 23.280995,0.11499023 24.327992,1.9889985 24.360996,2.0639954C24.755985,2.0050049,25.149983,1.9920044,25.537983,2.0269928L25.563984,1.9609986z</Geometry>

    <Geometry x:Key="Exit">M1.442037,0L16.002031,14.585751 30.588022,0.025996563 32.001024,1.4409965 17.414783,16.001002 31.97503,30.587006 30.560022,32 15.999268,17.413969 1.4130009,31.973999 0,30.558998 14.586494,15.998742 0.027028472,1.4140019z</Geometry>

    <Geometry x:Key="Maximize">M2.2690125,11.757996L2.2690125,29.011002 23.076019,29.011002 23.076019,23.231995 6.6530151,23.231995 6.6530151,11.757996z M8.9230042,2.9889984L8.9230042,20.241989 29.730011,20.241989 29.730011,2.9889984z M6.6530151,0L32,0 32,23.231995 25.346008,23.231995 25.346008,32 0,32 0,8.7679901 6.6530151,8.7679901z</Geometry>

    <Geometry x:Key="Minimize">M0,0L32,0 32,5.3 0,5.3z</Geometry>

    <Geometry x:Key="Palette">M6.8620544,19.197851C6.1620355,19.197851 5.4620167,19.697847 5.2620636,20.397839 5.0620495,21.197836 5.5620542,22.09783 6.4620262,22.297825 7.3620592,22.497828 8.1620546,21.997831 8.3620687,21.097838 8.5620828,20.29784 8.0620781,19.397846 7.1620451,19.197851z M9.9620596,11.498914C8.96205,11.498914 8.0620781,12.198905 7.862064,13.0989 7.5620733,14.19889 8.3620687,15.398877 9.4620548,15.59888 10.662078,15.898873 11.762126,15.098885 12.062116,13.998895 12.362107,12.898897 11.562111,11.69891 10.462064,11.498914z M17.061126,5.699956C15.861164,5.699956 14.861154,6.4989496 14.561102,7.6989409 14.261112,9.0989314 15.161145,10.39892 16.461145,10.798919 17.861183,11.098916 19.261159,10.298923 19.561149,8.8989326 19.861202,7.498942 18.961168,6.1989528 17.661169,5.7999578 17.461155,5.7999578 17.361177,5.699956 17.161163,5.699956z M20.361206,0C29.460292,0.30000091 23.961216,8.4989339 23.961216,8.4989339 20.561159,13.498899 24.761211,13.598896 24.761211,13.598896 31.960315,12.098908 31.860279,16.598873 31.860279,16.598873 33.16028,21.697832 24.961225,27.09779 24.961225,27.09779 10.562102,34.896725 3.2620445,29.097775 3.2620445,29.097775 -2.537022,24.197811 1.1630253,15.398877 1.1630252,15.398877 6.1620355,3.3999749 20.361206,2.1320729E-07 20.361206,0z</Geometry>

    <Geometry x:Key="Languages">M23.542969,22.45802C22.734985,25.87001 21.407959,28.077012 20.090942,29.487016 23.763977,28.375016 26.799988,25.806014 28.536987,22.45802z M10.493958,22.45802C12.218994,27.951005 15.189941,29.660022 16.054993,30.047015 16.948975,29.756 20.10199,28.311998 21.610962,22.45802z M3.4629517,22.45802C5.2749634,25.951003 8.506958,28.585008 12.393982,29.612018 11.026978,28.191026 9.5439453,25.941024 8.5379639,22.45802z M24.159973,12.441993C24.270996,13.596016 24.336975,14.824014 24.302979,16.19999 24.263,17.827007 24.119995,19.268993 23.911987,20.579999L29.339966,20.579999C29.835999,19.143993 30.117981,17.611003 30.117981,16.009011 30.117981,14.775003 29.941956,13.583992 29.640991,12.441993z M9.4679565,12.441993C9.2939453,13.785012 9.2469482,15.264016 9.407959,16.921001 9.539978,18.275005 9.7419434,19.483012 9.9879761,20.579999L22.006958,20.579999C22.225952,19.280009 22.379944,17.827007 22.420959,16.152993 22.454956,14.790017 22.403992,13.560005 22.289001,12.441993z M2.3589478,12.441993C2.05896,13.583992 1.8829956,14.775003 1.8829956,16.009011 1.8829956,17.611003 2.164978,19.143993 2.6599731,20.579999L8.0739746,20.579999C7.848999,19.513011 7.6569824,18.375011 7.532959,17.104015 7.3669434,15.397989 7.4069824,13.855995 7.5769653,12.441993z M20.221985,2.5690017C21.727966,4.1199972,23.221985,6.617008,23.91095,10.564001L29.017944,10.564001C27.416992,6.7680094,24.195984,3.8139975,20.221985,2.5690017z M12.529968,2.3720102C8.2149658,3.4669819,4.6819458,6.5329931,2.9819946,10.564001L7.901001,10.564001C8.7919922,6.6609838,10.78595,4.0180075,12.529968,2.3720102z M16.095947,1.9920053C14.978943,2.6090102,11.182983,5.0700099,9.80896,10.564001L22.013977,10.564001C20.78595,4.1120016,17.180969,2.372987,16.095947,1.9920053z M15.891968,0L16.129944,0.053009032C24.891968,0.12298569 32,7.2519877 32,16.009011 32,24.770004 24.886963,31.900012 16.121948,31.966998L15.828979,31.964008C7.0869751,31.871021 0,24.753005 0,16.009011 0,7.2869913 7.0529785,0.18499745 15.765991,0.057983398z</Geometry>

    <Geometry x:Key="Style">M7.201427,19.298768C6.5823994,19.298768 6.0043879,19.580754 5.4323583,20.160719 4.7713986,20.83175 4.6653791,22.009747 4.5303674,23.500858 4.3683777,25.292878 4.1753817,27.43085 2.9813333,29.722877 7.4243918,29.080899 10.060477,28.084912 11.622451,26.497852 12.17569,25.93572 13.631104,24.456036 10.702251,21.388109L10.58193,21.264004 10.545859,21.227364 10.325971,21.009708C9.1641646,19.889399,8.0882998,19.298768,7.201427,19.298768z M28.740011,1.9797354C28.702135,1.9789858,28.664135,1.9932356,28.633633,2.0222349L11.056253,18.895072 12.270279,20.12706 28.848639,2.2872324C28.91464,2.2152338 28.913639,2.0962343 28.845638,2.027235 28.815638,1.9962349 28.777887,1.9804859 28.740011,1.9797354z M28.768637,0.00025558472C29.321148,0.0085048676 29.870659,0.21725273 30.270668,0.6242485 31.093687,1.4582405 31.113688,2.7872276 30.313669,3.6482201L13.512333,21.727795 13.546756,21.782035C15.368254,24.728159 14.111014,26.820994 13.048497,27.900949 10.904484,30.077863 7.3344245,31.296997 1.1083201,31.97401 1.0723088,31.977916 1.0362976,31.979991 1.0003474,31.979991 0.64230981,31.979991 0.30832058,31.787971 0.13033966,31.471927 -0.067722549,31.123899 -0.037692808,30.692985 0.2043152,30.373888 2.1303687,27.841866 2.3473518,25.440829 2.539371,23.320802 2.6963561,21.581761 2.845345,19.939769 4.0073495,18.75872 5.5143829,17.226257 7.3329001,16.901935 9.2760468,17.817926L9.2854567,17.822622 27.248604,0.57924843C27.660612,0.18425179,28.216124,-0.0079956055,28.768637,0.00025558472z</Geometry>

    <Geometry x:Key="Back">M21.575989,0L32,9.0769969 21.390991,17.842995 20.208008,16.409996 28.848999,9.2729961C8.6690063,4.3729998,1.967041,18.186997,1.6870117,18.790001L0,18.010994C0.072021484,17.856995,6.960022,3.4460021,26.697021,6.9219991L20.356995,1.4000011z</Geometry>

    <Geometry x:Key="DrawingPin">M22.400024,0L32,9.8999939 29.200012,12.800018 27.300049,10.800018 18.800049,19.600006 19.200012,20 18.700012,26.5 14,21.800018 0,32 11.100037,18.800018 6.4000244,14 12.700012,13.5 13,13.800018 14,12.700012 14,12.600006 14.100037,12.600006 21.5,5 19.600037,3z</Geometry>

    <Geometry x:Key="GitHub">M8,0C3.58,0 0,3.58 0,8 0,11.54 2.29,14.53 5.47,15.59 5.87,15.66 6.02,15.42 6.02,15.21 6.02,15.02 6.01,14.39 6.01,13.72 4,14.09 3.48,13.23 3.32,12.78 3.23,12.55 2.84,11.84 2.5,11.65 2.22,11.5 1.82,11.13 2.49,11.12 3.12,11.11 3.57,11.7 3.72,11.94 4.44,13.15 5.59,12.81 6.05,12.6 6.12,12.08 6.33,11.73 6.56,11.53 4.78,11.33 2.92,10.64 2.92,7.58 2.92,6.71 3.23,5.99 3.74,5.43 3.66,5.23 3.38,4.41 3.82,3.31 3.82,3.31 4.49,3.1 6.02,4.13 6.66,3.95 7.34,3.86 8.02,3.86 8.7,3.86 9.38,3.95 10.02,4.13 11.55,3.09 12.22,3.31 12.22,3.31 12.66,4.41 12.38,5.23 12.3,5.43 12.81,5.99 13.12,6.7 13.12,7.58 13.12,10.65 11.25,11.33 9.47,11.53 9.76,11.78 10.01,12.26 10.01,13.01 10.01,14.08 10,14.94 10,15.21 10,15.42 10.15,15.67 10.55,15.59A8.013,8.013,0,0,0,16,8C16,3.58,12.42,0,8,0z</Geometry>
    
    <Geometry x:Key="Yes">M29.403992,0L32,3.5860286 8.3720093,21.479001 5.7740173,17.895017 5.776001,17.893002 0,9.9110087 3.5079956,7.2570179 9.2829895,15.23602z</Geometry>

    <Geometry x:Key="No">M7.1999998,0L16,8.7999997 24.799999,0 32,7.1999998 23.2,16 32,24.799999 24.799999,32 16,23.2 7.1999998,32 0,24.799999 8.7999997,16 0,7.1999998z</Geometry>
    
    <!--#region WaitingGeometry-->
    <Geometry x:Key="Wait1">M15.9,28C17.000005,28 17.900001,28.899994 17.900001,30 17.900001,31.100006 17.000005,32 15.9,32 14.799993,32 13.899999,31.100006 13.899999,30 13.899999,28.899994 14.799993,28 15.9,28z M22.69999,26.5C23.799997,26.5 24.69999,27.399994 24.69999,28.5 24.69999,29.600006 23.799997,30.5 22.69999,30.5 21.599982,30.5 20.699989,29.600006 20.699989,28.5 20.699989,27.399994 21.599982,26.5 22.69999,26.5z M9.000003,26C10.199985,26 11.199986,27 11.199986,28.199982 11.199986,29.399994 10.199985,30.399994 9.000003,30.399994 7.7999904,30.399994 6.7999899,29.399994 6.7999899,28.199982 6.6999838,27 7.6999843,26 9.000003,26z M27.599984,21.699982C28.500011,21.699982 29.299998,22.399994 29.299998,23.399994 29.299998,24.299988 28.599986,25.100006 27.599984,25.100006 26.69999,25.100006 25.900003,24.399994 25.900003,23.399994 25.900003,22.399994 26.69999,21.699982 27.599984,21.699982z M4.0000009,21.100006C5.1999833,21.100006 6.1999838,22.100006 6.1999838,23.299988 6.1999838,24.5 5.1999833,25.5 4.0000009,25.5 2.7999887,25.5 1.7999882,24.5 1.7999882,23.299988 1.6999821,22.100006 2.6999824,21.100006 4.0000009,21.100006z M29.599986,14.799988C30.500011,14.799988 31.299998,15.5 31.299998,16.5 31.299998,17.399994 30.599986,18.199982 29.599986,18.199982 28.699992,18.199982 27.900005,17.5 27.900005,16.5 27.900005,15.600006 28.699992,14.799988 29.599986,14.799988z M2.1999821,14.199982C3.399995,14.199982 4.3999955,15.199982 4.3999955,16.399994 4.3999955,17.600006 3.399995,18.600006 2.1999821,18.600006 1.0000002,18.600006 -1.8503488E-07,17.600006 0,16.399994 -1.8503488E-07,15.199982 1.0000002,14.199982 2.1999821,14.199982z M27.599984,8.1000061C28.400005,8.1000061 29.000011,8.6999817 29.000011,9.5 29.000011,10.299988 28.400005,10.899994 27.599984,10.899994 26.799997,10.899994 26.19999,10.299988 26.19999,9.5 26.099984,8.7999878 26.799997,8.1000061 27.599984,8.1000061z M4.0000009,7.2999878C5.1999833,7.2999878 6.1999838,8.2999878 6.1999838,9.5 6.1999838,10.699982 5.1999833,11.699982 4.0000009,11.699982 2.7999887,11.699982 1.7999882,10.699982 1.7999882,9.5 1.7999882,8.2999878 2.6999824,7.2999878 4.0000009,7.2999878z M22.69999,3.3999939C23.500009,3.3999939 24.099984,4 24.099984,4.7999878 24.099984,5.6000061 23.500009,6.1999817 22.69999,6.1999817 21.900001,6.1999817 21.299995,5.6000061 21.299995,4.7999878 21.299995,4 21.900001,3.3999939 22.69999,3.3999939z M9.000003,1.8999939C10.399998,1.8999939 11.59998,3 11.59998,4.5 11.59998,5.8999939 10.500004,7.1000061 9.000003,7.1000061 7.5999782,7.1000061 6.399996,6 6.399996,4.5 6.399996,3.1000061 7.5000026,1.8999939 9.000003,1.8999939z M15.9,0C17.400001,0 18.699989,1.1999817 18.699989,2.7999878 18.699989,4.2999878 17.500007,5.6000061 15.9,5.6000061 14.399999,5.6000061 13.099981,4.3999939 13.099981,2.7999878 13.099981,1.1999817 14.299993,0 15.9,0z</Geometry>

    <Geometry x:Key="Wait2">M0,19.017029L4.7279952,19.017029C5.5969827,20.605042 6.738004,22.14801 8.1480072,23.558044 13.120997,28.53302 21.784995,30.229004 26.218983,28.04303 23.403983,30.5 19.734,32 15.706995,32 7.902005,32 1.4140011,26.410034 0,19.017029z M15.706995,0C23.622977,0,30.17998,5.7540283,31.463,13.305054L26.858998,13.305054C25.970998,11.604004 24.769978,9.9460449 23.265982,8.4420166 17.488,2.6640015 8.0289886,1.2950439 3.8189988,5.3190308 6.7479832,2.0610352 10.980984,0 15.706995,0z</Geometry>

    <Geometry x:Key="Wait3">M14.962981,26.868011C16.37799,26.868011 17.527984,28.019989 17.527984,29.43399 17.527984,30.850006 16.37799,32 14.962981,32 13.542998,32 12.394988,30.850006 12.394988,29.43399 12.394988,28.019989 13.542998,26.868011 14.962981,26.868011z M6.8909911,24.411011C7.8150019,24.411011 8.5650023,25.158997 8.5650023,26.084991 8.5650023,27.01001 7.8150019,27.757996 6.8909911,27.757996 5.9669799,27.757996 5.2169799,27.01001 5.2169799,26.084991 5.2169799,25.158997 5.9669799,24.411011 6.8909911,24.411011z M23.701995,23.367004C25.200988,23.367004 26.419982,24.585999 26.419982,26.085999 26.419982,27.587006 25.200988,28.803009 23.701995,28.803009 22.201995,28.803009 20.986998,27.587006 20.986998,26.085999 20.986998,24.585999 22.201995,23.367004 23.701995,23.367004z M1.6759949,14.832001C2.5999755,14.832001 3.3499755,15.582001 3.3499755,16.506012 3.3499755,17.429993 2.5999755,18.179993 1.6759949,18.179993 0.74798591,18.179993 1.0579788E-07,17.429993 0,16.506012 1.0579788E-07,15.582001 0.74798591,14.832001 1.6759949,14.832001z M28.273986,13.661011C29.845977,13.661011 31.121001,14.93399 31.121001,16.506012 31.121001,18.080017 29.845977,19.352997 28.273986,19.352997 26.701995,19.352997 25.428985,18.080017 25.428985,16.506012 25.428985,14.93399 26.701995,13.661011 28.273986,13.661011z M23.703978,3.7709961C25.187987,3.7709961 26.386992,4.973999 26.386992,6.4590149 26.386992,7.9410095 25.187987,9.1430054 23.703978,9.1430054 22.220977,9.1430054 21.018981,7.9410095 21.018981,6.4590149 21.018981,4.973999 22.220977,3.7709961 23.703978,3.7709961z M6.8929747,3.7709961C7.8169855,3.7709961 8.566986,4.5230103 8.566986,5.446991 8.566986,6.3710022 7.8169855,7.1210022 6.8929747,7.1210022 5.9669799,7.1210022 5.2169799,6.3710022 5.2169799,5.446991 5.2169799,4.5230103 5.9669799,3.7709961 6.8929747,3.7709961z M14.960997,0C16.442992,0 17.639983,1.1950073 17.639983,2.6820068 17.639983,4.1600037 16.442992,5.3609924 14.960997,5.3609924 13.476989,5.3609924 12.278991,4.1600037 12.278991,2.6820068 12.278991,1.1950073 13.476989,0 14.960997,0z</Geometry>

    <Geometry x:Key="Wait4">M19.071995,29.69202L19.475987,31.651005C18.384009,31.877018 17.267007,31.991001 16.159035,31.991001 15.909036,31.991001 15.660014,31.98502 15.412028,31.974003L15.504985,29.976017C16.688027,30.03101,17.89701,29.935001,19.071995,29.69202z M8.7190435,27.894016C9.7410152,28.519016,10.837998,29.013004,11.981003,29.36301L11.394027,31.276005C10.092027,30.876011,8.8409917,30.312015,7.6760151,29.60001z M24.082959,27.609983L25.189963,29.275993C24.59896,29.668995,23.976958,30.024998,23.339955,30.336L22.462952,28.537989C23.020955,28.265987,23.565957,27.953985,24.082959,27.609983z M3.7889964,22.800999C4.3740175,23.839024,5.0930106,24.800999,5.9269941,25.661014L4.4900453,27.053013C3.5380201,26.070011,2.7159998,24.970005,2.0470555,23.782017z M1.9999969,15.946016C1.9999971,16.940004 2.1020479,17.91202 2.3050504,18.865023 2.3500335,19.076021 2.3990445,19.283998 2.4529993,19.490023L0.51702772,19.994997C0.45605396,19.760012 0.40002374,19.522005 0.34802164,19.280001 0.1170041,18.192018 -1.3412864E-07,17.079012 0,15.972994z M31.417966,10.641994C31.654961,11.306996,31.85096,11.996998,31.998959,12.695L30.042979,13.111001C29.912982,12.499999,29.741982,11.895998,29.533986,11.314997z M2.0950289,8.1180123L3.8310492,9.1109943C3.2369952,10.151003,2.7790489,11.261019,2.4700281,12.41202L0.53802411,11.893007C0.89105092,10.576998,1.415037,9.3070087,2.0950289,8.1180123z M26.813014,3.9370119C27.849999,4.8309945,28.766991,5.8529977,29.54,6.9739999L27.892968,8.1090097C27.217982,7.1289991,26.413966,6.2350167,25.506985,5.4510202z M7.7499897,2.3260199L8.7830083,4.0379953C7.7610371,4.6560067,6.8180449,5.403016,5.9830243,6.2579965L4.551996,4.8609933C5.5060351,3.8840033,6.5820224,3.0310065,7.7499897,2.3260199z M19.564,0.33999673C20.896029,0.62301669,22.191987,1.0740055,23.415984,1.6820075L22.525971,3.4729931C21.452975,2.9410102,20.316991,2.5450141,19.147984,2.2960207z M15.49998,0L15.584025,1.9980167C14.808025,2.0299994 14.025006,2.1280219 13.258039,2.2879953 12.848005,2.373017 12.446028,2.4750067 12.053024,2.5920111L11.481003,0.67599532C11.928024,0.54199252 12.384993,0.42599521 12.850996,0.33001733 13.723981,0.14801054 14.616009,0.037018102 15.49998,0z</Geometry>

    <Geometry x:Key="Wait5">M26.482985,22.600986L28.245984,23.544989C25.451985,28.759995 20.043984,32 14.132985,32 8.2609843,32 2.8699845,28.791996 0.064984321,23.626987L1.8219843,22.671988C4.2779845,27.191994 8.9949845,29.999998 14.132985,29.999998 19.305985,29.999998 24.037984,27.164993 26.482985,22.600986z M14.133009,0C20.005002,0,25.395001,3.2079773,28.201001,8.3719788L26.443005,9.3269958C23.988004,4.8069763 19.271008,2 14.133009,2 8.9450062,2 4.2060083,4.8479919 1.7660065,9.4309998L0,8.4919739C2.7890013,3.2539978,8.2040089,0,14.133009,0z</Geometry>

    <Geometry x:Key="Wait6">M16,23.353011C16.552,23.353011,17,23.801011,17,24.35301L17,31.000008C17,31.552008 16.552,32.000008 16,32.000008 15.448,32.000008 15,31.552008 15,31.000008L15,24.35301C15,23.801011,15.448,23.353011,16,23.353011z M11.881907,22.255208C12.043227,22.258503 12.206244,22.300967 12.35686,22.386596 12.83583,22.660612 13.002819,23.271646 12.729836,23.751672L9.4370451,29.525994C9.2520561,29.849012 8.9150772,30.030023 8.5670996,30.030023 8.3991098,30.030023 8.2291212,29.98802 8.0721312,29.899015 7.5931616,29.625 7.4261723,29.013966 7.6991549,28.533939L10.991946,22.759617C11.180309,22.430286,11.527002,22.24796,11.881907,22.255208z M19.979294,21.917377C20.33424,21.90761,20.683278,22.087349,20.873029,22.415976L24.385052,28.478013C24.662054,28.956017 24.499053,29.56702 24.02105,29.844022 23.864049,29.936022 23.691048,29.979022 23.521047,29.979022 23.176044,29.979022 22.840042,29.800021 22.655041,29.48002L19.143017,23.418983C18.866015,22.940979 19.029016,22.328976 19.50602,22.051974 19.655396,21.965411 19.817955,21.921817 19.979294,21.917377z M8.7567272,19.218467C9.111557,19.20765 9.4607449,19.386005 9.6525469,19.713239 9.9305315,20.189215 9.7705402,20.802185 9.2935667,21.081171L3.5568829,24.437007C3.397892,24.530003 3.2239017,24.574 3.0529099,24.574 2.7089291,24.574 2.3749485,24.397009 2.1889591,24.079025 1.9099731,23.602048 2.0709648,22.990078 2.5469379,22.711092L8.2836218,19.354256C8.4329891,19.267385,8.5954409,19.223384,8.7567272,19.218467z M22.97126,18.948189C23.132491,18.951141,23.295168,18.993054,23.444857,19.077744L29.536852,22.537926C30.016895,22.810919 30.184864,23.42197 29.912891,23.901973 29.728869,24.225993 29.38988,24.408008 29.041856,24.408008 28.874864,24.408008 28.70488,24.366014 28.548874,24.277997L22.457855,20.817846C21.976836,20.544823 21.808867,19.933802 22.081817,19.453769 22.26884,19.123767 22.616551,18.941693 22.97126,18.948189z M23.993984,15.000007L30.999998,15.000007C31.551999,15.000008 32,15.448008 32,16.000008 32,16.552008 31.551999,17.000008 30.999998,17.000007L23.993984,17.000007C23.441983,17.000008 22.993982,16.552008 22.993982,16.000008 22.993982,15.448008 23.441983,15.000008 23.993984,15.000007z M1.0000038,15.000007L7.6470242,15.000007C8.1990261,15.000008 8.647028,15.448008 8.647028,16.000008 8.647028,16.552008 8.1990261,17.000008 7.6470242,17.000007L1.0000038,17.000007C0.44800186,17.000008 0,16.552008 0,16.000008 0,15.448008 0.44800186,15.000008 1.0000038,15.000007z M2.9770012,7.5922041C3.1381397,7.5952759,3.3008366,7.6374016,3.4508362,7.7223949L9.2308598,11.004141C9.7108612,11.27712 9.8788624,11.888072 9.6068611,12.368035 9.4228601,12.69201 9.0838594,12.873996 8.735858,12.873996 8.5688572,12.873996 8.3988562,12.831999 8.242856,12.744006L2.4638329,9.4612608C1.98283,9.188282 1.8148289,8.5783291 2.0878296,8.0983658 2.2755184,7.767705 2.6224937,7.5854454 2.9770012,7.5922041z M28.915105,7.4264822C29.26989,7.4156666 29.618885,7.5940208 29.810011,7.9212551 30.089014,8.397233 29.928012,9.0102043 29.452009,9.2891912L23.404961,12.826024C23.245959,12.919019 23.071958,12.963017 22.900956,12.963017 22.556954,12.963017 22.222951,12.786026 22.03695,12.46804 21.757947,11.991063 21.918949,11.379092 22.394952,11.100105L28.442,7.5622721C28.591377,7.4754009,28.753839,7.4313993,28.915105,7.4264822z M8.450675,2.0223846C8.8051815,2.0128441,9.1537209,2.1928463,9.3448563,2.5207939L12.677042,8.2719698C12.954058,8.7499847 12.791048,9.3610039 12.313022,9.6380119 12.156013,9.7300148 11.983004,9.773016 11.812994,9.773016 11.467975,9.773016 11.131956,9.5940104 10.946945,9.2740011L7.61376,3.5228252C7.3367443,3.0448103 7.5007534,2.4337921 7.9777803,2.1567841 8.1271639,2.070219 8.2895355,2.02672 8.450675,2.0223846z M16,0C16.552,0,17,0.44799995,17,1.0000019L17,8.0060158C17,8.5580168 16.552,9.0060177 16,9.0060177 15.448,9.0060177 15,8.5580168 15,8.0060158L15,1.0000019C15,0.44799995,15.448,0,16,0z</Geometry>

    <Geometry x:Key="Wait7">M14.892256,6.3221557E-06C14.981648,-0.00010277117 15.066522,0.0012094774 15.146769,0.0032082279 15.783801,0.006199074 16.12377,0.008213223 16.12377,0.0082130842 16.12377,0.008213223 15.786791,0.044193252 15.153788,0.11221659 14.836768,0.13821739 14.4498,0.18420713 14.002773,0.29519886 13.554769,0.39520452 13.036757,0.47821185 12.479744,0.67120409 11.344721,0.96719235 10.037697,1.566188 8.670737,2.4191803 7.312688,3.287187 5.926685,4.4961953 4.7376444,6.059175 3.555623,7.6241688 2.6006552,9.5571412 2.0846576,11.718141 2.0216076,11.988128 1.9596562,12.26013 1.8966061,12.534145 1.8616325,12.806148 1.8265979,13.079125 1.7916244,13.354149 1.6966525,13.881123 1.6936007,14.500138 1.6766329,15.11311 1.63464,15.658121 1.7396218,16.268134 1.7535989,16.851108 1.8226306,17.437104 1.9246216,18.02612 2.0406508,18.614098 2.5956504,20.945079 3.6976537,23.240081 5.3686945,25.113055 6.1657016,26.086074 7.1676671,26.873055 8.187699,27.614049 9.254729,28.292054 10.382733,28.891051 11.590756,29.281032 13.964747,30.121055 16.614804,30.239036 19.060818,29.766046 21.488888,29.212064 23.803919,28.150058 25.594895,26.539073 27.393929,24.957082 28.813929,23.030089 29.640965,20.964091 29.832984,20.444106 30.063945,19.942094 30.184003,19.413106 30.335982,18.892112 30.475997,18.377101 30.549973,17.872098 30.59697,17.619109 30.643969,17.368104 30.690966,17.119111 30.713,16.851108 30.735949,16.585118 30.757983,16.32212 30.778979,16.058112 30.799977,15.796121 30.820973,15.53712 30.822011,15.297131 30.822987,15.058119 30.823964,14.822127 30.789965,12.857141 30.400984,11.063146 29.837989,9.5491456 29.267975,8.0351772 28.528952,6.8061799 27.83595,5.8611779 27.133916,4.9201736 26.500912,4.2361869 26.047904,3.7931964 25.578904,3.3621988 25.3289,3.132189 25.3289,3.132189 25.3289,3.132189 25.602891,3.3331768 26.116934,3.710189 26.613951,4.1101803 27.350959,4.7071924 28.138932,5.6181678 28.925929,6.525176 29.792945,7.7271652 30.518967,9.2601461 31.241997,10.790136 31.822022,12.660151 31.966006,14.770125 31.979983,15.046125 32.002019,15.272137 32.008977,15.597117 32.002995,15.856118 31.997988,16.119117 31.992984,16.384131 31.985964,16.649114 31.979006,16.917117 31.971987,17.188111 31.937991,17.472106 31.904971,17.759124 31.869996,18.048123 31.822022,18.637109 31.688964,19.205098 31.549008,19.779101 31.438962,20.364089 31.215996,20.924083 31.025992,21.506082 30.21098,23.812068 28.747948,26.040053 26.759949,27.853063 24.795935,29.69204 22.229863,31.020036 19.459872,31.654036 16.674803,32.217023 13.710777,32.114026 10.947742,31.174027 9.5707118,30.719043 8.2887131,30.026053 7.0847193,29.241055 5.926685,28.393067 4.8046619,27.483069 3.9086546,26.37605 2.0166027,24.248071 0.87858824,21.595101 0.31760727,18.979117 0.20261557,18.31811 0.10660609,17.656096 0.048621898,17.002109 0.041602848,16.33512 -0.045373319,15.709116 0.031593082,15.031111 0.07462327,14.420121 0.099586954,13.826131 0.23258434,13.174127 0.28660096,12.858149 0.34159432,12.543148 0.39561109,12.230131 0.47758232,11.931152 0.55961458,11.634156 0.64060913,11.339145 1.2975997,8.9811563 2.4696111,6.938168 3.8446278,5.3381705 5.2116491,3.7221822 6.7957141,2.5631918 8.293718,1.7762088 9.7997185,1.0021958 11.195732,0.50219858 12.384772,0.29321513 12.967787,0.1412081 13.505757,0.10321392 13.968775,0.059207953 14.315261,0.013454588 14.624083,0.00033400917 14.892256,6.3221557E-06z</Geometry>

    <Geometry x:Key="Wait8">M19.302419,15.323901C20.403378,15.423908 21.4054,17.126902 21.505439,19.129883 21.806405,22.535874 21.806405,25.84088 21.605414,28.745865 21.505439,30.347847 20.103389,31.74985 18.400372,31.950836 16.698394,32.250822 15.39638,31.148838 15.796347,29.44685 16.497403,26.341854 17.098359,22.83589 17.399388,19.029907 17.5994,16.926922 18.300395,15.323901 19.302419,15.323901z M22.407424,13.921931C23.108418,13.921931 24.009425,14.32293 24.810458,15.123921 26.814441,16.926922 28.416444,18.629885 29.718455,20.131893 30.419511,20.932884 30.419511,22.635878 29.818494,23.837868 29.117499,25.139864 28.116454,25.439881 27.41546,24.538885 26.213424,22.635878 24.810458,20.532892 23.008441,18.228916 21.806405,16.72691 21.205388,15.023916 21.605414,14.222924 21.706429,14.121911 22.006419,13.921931 22.407424,13.921931z M14.995376,13.220915C15.696371,13.220915 16.397364,13.420926 16.698394,13.821925 17.499364,14.722922 16.898408,16.525923 15.496357,18.028906 12.791319,20.832878 9.7873276,23.637888 7.1823257,26.040861 5.7802762,27.342858 3.5772556,26.942866 2.3752807,25.339876 1.1732447,23.737864 1.3732585,21.433888 2.7762846,20.331904 5.5802625,18.228916 8.7853049,16.024918 12.090324,14.021937 13.192323,13.520931 14.194344,13.220915 14.995376,13.220915z M28.51648,9.2149527C29.217475,9.2149527 30.11946,10.215955 30.519488,11.417945 30.920491,12.71994 30.720477,13.821925 30.019482,13.721919 28.616458,13.621914 26.914477,13.520931 24.911471,13.520931 23.60946,13.520931 22.206433,12.71994 21.806405,11.818944 21.505439,10.91694 22.306409,10.015944 23.60946,9.8159325 25.411475,9.5149386 27.014455,9.3149579 28.51648,9.2149527z M3.5772554,6.509948L3.8772458,6.509948C6.5822843,6.8109415 9.586337,7.4119518 12.791319,8.3129485 14.694349,8.9139588 16.097375,10.115949 15.996362,11.016946 15.796347,11.918919 13.993355,12.419924 11.89031,12.11893 8.2843245,11.718938 4.879268,11.617926 1.8742391,11.718938 0.27125996,11.718938 -0.42973441,10.416943 0.2712599,8.9139588 0.67226415,7.5119574 2.1752669,6.509948 3.5772554,6.509948z M21.004397,1.4019709C21.4054,1.4019709 22.006419,1.6029892 22.607436,1.9029757 23.809411,2.6039915 24.510466,3.6059704 24.310454,4.2069805 23.809411,5.4089706 23.208455,6.8109415 22.507399,8.4129546 22.006419,9.5149386 20.90442,10.115949 20.003413,9.6149447 19.101367,9.1139395 18.7014,7.7119381 19.001389,6.509948 19.50237,4.7069781 19.802422,3.2049713 20.103389,1.9029757 20.203425,1.5019765 20.504393,1.4019709 21.004397,1.4019709z M11.289353,0C12.291314,0 13.29236,0.29998636 13.693364,0.9009965 14.795362,2.4039803 16.097375,4.1069748 17.299411,6.2099616 18.100383,7.611963 18.200358,9.0139344 17.299411,9.2149527 16.397364,9.5149386 14.795362,8.5139363 13.693364,7.210964 11.990348,5.2079523 10.388346,3.5059648 8.8853425,2.102987 8.1842869,1.4019709 8.7853049,0.50097417 10.087317,0.099975142 10.588298,0 10.989303,0 11.289353,0z</Geometry>

    <Geometry x:Key="Wait9">M3.6679978,22.546278C6.0370154,25.120323 9.498013,26.653287 13.253993,26.426296 16.295008,26.239284 18.995995,24.92629 20.999993,22.924268L24.734,27.049285C21.826012,29.862344 17.948998,31.701341 13.594019,31.967332 8.3090176,32.287343 3.4410081,30.233318 0,26.733304z M12.607997,0.00023096545C12.934993,0.0021842776 13.262995,0.012194081 13.594019,0.032213839 17.948998,0.29820591 21.826012,2.1382399 24.734,4.950201L20.999993,9.0752168C18.995995,7.073256 16.295008,5.7612395 13.253993,5.5732503 9.498013,5.3472366 6.0370154,6.8802013 3.6679978,9.454247L0,5.2672191C3.226012,1.9852241,7.7060213,-0.024793364,12.607997,0.00023096545z</Geometry>

    <Geometry x:Key="Wait10">M18.190453,22.499694C17.991478,23.893657 17.493494,25.187646 16.597502,26.382638 15.999481,27.079619 15.3035,27.676625 14.506506,28.174605 11.718492,29.767602 8.4335308,29.369595 6.1435008,27.577628 5.5465179,26.880616 5.3475442,26.183635 5.3475442,25.884627 5.3475442,25.088649 5.8445516,24.291663 6.5415092,23.893657 6.6415458,23.794659 6.7415209,23.794659 6.9404945,23.694686 7.7365122,23.395678 8.6325045,23.495683 9.329524,24.09266 9.4294987,24.192664 9.5284977,24.192664 9.6285334,24.291663 10.524527,25.088649 11.718492,25.486653 12.814496,25.586657 13.909523,25.685656 15.103488,25.386649 16.099518,24.889645 16.896511,24.192664 17.692469,23.395678 18.190453,22.499694z M23.566469,16.924758C24.661436,17.720767 25.557428,18.915728 26.055473,20.209718 26.354422,21.1057 26.553457,22.001685 26.553457,22.997674 26.553457,26.183635 24.562437,28.871617 21.774483,29.966573 20.87849,30.165576 20.181473,29.966573 19.882462,29.767602 19.185505,29.369595 18.787495,28.57261 18.787495,27.676625L18.787495,27.278621C18.88747,26.482642 19.484453,25.685656 20.281446,25.386649 20.380445,25.386649 20.480482,25.28765 20.579481,25.28765 21.674448,24.889645 22.670477,24.09266 23.367434,23.196675 23.964478,22.300692 24.362486,21.205706 24.362486,20.010714 24.462461,18.816731 24.163452,17.720767 23.566469,16.924758z M2.3605561,10.851843C2.7585647,10.851843 3.1565125,10.95084 3.5555589,11.150849 3.6545575,11.249847 3.7545326,11.249847 3.8535311,11.349851 4.55055,11.846824 4.8495603,12.743815 4.7495241,13.539824 4.7495241,13.639799 4.7495241,13.738796 4.6505256,13.838801 4.4515514,15.032785 4.6505256,16.227776 5.1485095,17.322762 5.6455169,18.318751 6.4425106,19.214736 7.4375019,19.811711 8.4335308,20.409726 9.5284977,20.608729 10.524527,20.608729 9.2294874,21.205706 7.8365483,21.404708 6.4425106,21.205706 5.5465179,21.1057 4.6505256,20.8077 3.7545328,20.309722 0.96651841,18.716725 -0.32742196,15.630769 0.070525905,12.743815 0.36953581,11.846824 0.86751974,11.349851 1.1655533,11.249847 1.563562,10.95084 1.9625473,10.851843 2.3605561,10.851843z M24.462461,8.760867C24.86047,8.760867 25.159481,8.760867 25.557428,8.8608721 26.453421,8.9598702 27.349474,9.2588767 28.245466,9.7568558 31.033421,11.349851 32.327421,14.435809 31.929413,17.322762 31.630404,18.218747 31.13242,18.716725 30.834446,18.816731 30.137428,19.214736 29.241434,19.214736 28.444441,18.816731 28.345442,18.716725 28.245466,18.716725 28.146469,18.616752 27.44945,18.11975 27.15044,17.223765 27.250475,16.42678 27.250475,16.327781 27.250475,16.227776 27.349474,16.128779 27.548449,14.933787 27.349474,13.738796 26.851429,12.64381 26.354422,11.647821 25.557428,10.751838 24.562437,10.154861 23.566469,9.5578536 22.471441,9.3588818 21.475473,9.3588818 22.371466,8.9598702 23.466433,8.760867 24.462461,8.760867z M21.376474,0.79597936C23.068485,0.79597924 24.661436,1.3939631 25.955437,2.3889752 26.553457,3.0859567 26.75243,3.7829381 26.75243,4.0819453 26.75243,4.8779243 26.254446,5.6749109 25.557428,6.0729154 25.458429,6.1729206 25.358454,6.1729206 25.159481,6.2719182 24.362486,6.5708946 23.466433,6.4709204 22.769474,5.8739131 22.670477,5.7739085 22.57044,5.7739085 22.471441,5.6749109 21.575449,4.8779243 20.380445,4.4799198 19.285479,4.3809222 18.190453,4.2809475 16.99551,4.5799244 15.999481,5.076927 15.00449,5.6749109 14.307471,6.4709204 13.809487,7.3669041 14.008522,5.9739178 14.506506,4.678922 15.402498,3.4849382 15.999481,2.7879566 16.696501,2.1899727 17.493494,1.6929704 18.787495,1.0949864 20.081497,0.79597924 21.376474,0.79597936z M10.922535,0C11.420519,6.9757789E-08 11.818528,0.10000482 12.017502,0.29897697 12.71452,0.69698159 13.112529,1.4929608 13.112529,2.3889752L13.112529,2.7879568C13.01347,3.5839358 12.41551,4.3809222 11.619493,4.678922 11.519518,4.678922 11.420519,4.7789267 11.320483,4.7789267 10.225516,5.1769317 9.2294874,5.9739178 8.6325045,6.869902 8.0355225,7.7658857 7.6375136,8.8608721 7.6375136,10.054856 7.6375136,11.150849 7.9355469,12.245836 8.5335064,13.14182 7.4375019,12.344833 6.5415092,11.150849 6.0445018,9.8558539 5.5465179,8.9598702 5.3475442,8.0638855 5.3475442,7.0689043 5.3475442,3.882943 7.3385034,1.1949912 10.125541,0.10000501 10.42449,6.9757789E-08 10.623525,6.9757789E-08 10.922535,0z</Geometry>

    <Geometry x:Key="Wait11">M15.819,6.8640137C10.837997,6.8640137 6.7860107,10.962036 6.7860107,16 6.7860107,21.038025 10.837997,25.136047 15.819,25.136047 20.800003,25.136047 24.852005,21.038025 24.852005,16 24.852005,10.962036 20.800003,6.8640137 15.819,6.8640137z M26.201004,6.4440308L23.373001,9.1410522C24.990005,10.962036 25.98201,13.359009 25.98201,16 25.98201,21.677002 21.430008,26.279053 15.819,26.279053 10.206009,26.279053 5.6560059,21.677002 5.6560059,16 5.6560059,13.473022 6.5610046,11.163025 8.0570068,9.3730469L5.026001,6.8980103C2.9880066,9.3670044 1.7580109,12.541016 1.7580109,16 1.7580109,23.842041 8.0660095,30.223022 15.819,30.223022 23.572006,30.223022 29.880005,23.842041 29.880005,16 29.880005,12.321045 28.477005,8.9710083 26.201004,6.4440308z M15.819,0C24.555008,0 31.638,7.1640015 31.638,16 31.638,24.835999 24.555008,32 15.819,32 7.0830078,32 0,24.835999 0,16 0,7.1640015 7.0830078,0 15.819,0z</Geometry>

    <Geometry x:Key="Wait12">M15.984023,22.859001C16.536024,22.859001,16.984022,23.307,16.984022,23.859002L16.984022,31C16.984022,31.552003 16.536024,32.000001 15.984023,32.000001 15.43202,32.000001 14.984022,31.552003 14.984023,31L14.984023,23.859002C14.984022,23.307,15.43202,22.859001,15.984023,22.859001z M21.545941,20.567979C21.801826,20.567979,22.057585,20.665726,22.252592,20.86122L27.302776,25.910058C27.69379,26.301046 27.69379,26.933026 27.302776,27.324013 27.107769,27.519007 26.85176,27.617004 26.59575,27.617004 26.339741,27.617004 26.083732,27.519007 25.888724,27.324013L20.838541,22.275174C20.448527,21.884187 20.448527,21.251207 20.838541,20.86122 21.034048,20.665726 21.290057,20.567979 21.545941,20.567979z M10.431252,20.547C10.687111,20.547 10.942845,20.644493 11.137833,20.839479 11.528809,21.230451 11.528809,21.863406 11.137833,22.253379L6.0891476,27.303021C5.8941593,27.498007 5.638176,27.596 5.3821917,27.596 5.1262074,27.596 4.870223,27.498007 4.6752357,27.303021 4.2842598,26.912049 4.2842598,26.280093 4.6752357,25.889121L9.7239213,20.839479C9.9194093,20.644493,10.175393,20.547,10.431252,20.547z M23.859015,15.014986L31.000021,15.014986C31.552021,15.014986 32.000023,15.462986 32.000023,16.014986 32.000023,16.566986 31.552021,17.014986 31.000021,17.014986L23.859015,17.014986C23.307014,17.014986 22.859014,16.566986 22.859014,16.014986 22.859014,15.462986 23.307014,15.014986 23.859015,15.014986z M1.000001,14.984998L8.1410079,14.984998C8.6930084,14.984998 9.1410089,15.432998 9.1410089,15.984998 9.1410089,16.536998 8.6930084,16.984998 8.1410079,16.984998L1.000001,16.984998C0.44800091,16.984998 0,16.536998 0,15.984998 0,15.432998 0.44800091,14.984998 1.000001,14.984998z M26.617047,4.4039783C26.872938,4.4039783 27.128704,4.5014706 27.323716,4.6964569 27.714741,5.087429 27.714741,5.7203846 27.323716,6.1103573L22.274402,11.159999C22.07939,11.354985 21.823373,11.452978 21.567358,11.452978 21.311342,11.452978 21.055326,11.354985 20.860313,11.159999 20.469289,10.769027 20.469289,10.137072 20.860313,9.7460995L25.909628,4.6964569C26.105141,4.5014706,26.361156,4.4039783,26.617047,4.4039783z M5.4039717,4.3829975C5.6598539,4.3829975,5.9156113,4.4807453,6.1106167,4.6762371L11.160757,9.7250547C11.551767,10.116041 11.551767,10.748018 11.160757,11.139004 10.965751,11.333997 10.709744,11.431993 10.453737,11.431993 10.19773,11.431993 9.9417229,11.333997 9.7467175,11.139004L4.6965771,6.0901871C4.3065662,5.6992016 4.3065662,5.0662231 4.6965771,4.6762371 4.8920822,4.4807453 5.1480904,4.3829975 5.4039717,4.3829975z M16.015046,0C16.567046,0,17.015046,0.44799995,17.015046,0.99999809L17.015046,8.1409807C17.015046,8.6929798 16.567046,9.1409788 16.015046,9.1409788 15.463046,9.1409788 15.015046,8.6929798 15.015047,8.1409807L15.015047,0.99999809C15.015046,0.44799995,15.463046,0,16.015046,0z</Geometry>

    <Geometry x:Key="Wait13">M10.657013,28.944977C12.35199,29.644989,14.149017,30,16,30L16.015015,32 16,32C13.88501,32,11.830994,31.593994,9.8940125,30.794006z M25.903992,25.894989L27.319,27.307983C25.824005,28.804993,24.080017,29.972992,22.13501,30.781006L21.368011,28.934998C23.069,28.227997,24.595001,27.204987,25.903992,25.894989z M3.0700073,21.380981C3.7789917,23.082001,4.8040161,24.606995,6.1149902,25.914978L4.7030029,27.330994C3.2059937,25.837982,2.0350037,24.095001,1.223999,22.151001z M32,15.938995L32,16C32,18.118988,31.591003,20.177979,30.787018,22.121002L28.938995,21.35498C29.643005,19.656982,30,17.85498,30,16z M1.2000122,9.9100037L3.0490112,10.67099C2.3529968,12.362,2,14.153992,2,16L0,16.031006 0,16C0,13.891998,0.40301514,11.842987,1.2000122,9.9100037z M27.27301,4.6459961C28.77301,6.1359863,29.946991,7.8769836,30.761017,9.8179932L28.916992,10.59198C28.20401,8.8930054,27.177002,7.3699951,25.863007,6.0650024z M9.8340149,1.2309875L10.605011,3.0769958C8.9049988,3.7869873,7.381012,4.8129883,6.0750122,6.1259766L4.6570129,4.7149963C6.1490173,3.2160034,7.8909912,2.0440063,9.8340149,1.2309875z M15.953003,0L16,0C18.10199,0,20.145996,0.40197754,22.075012,1.1940002L21.315002,3.0440063C19.627991,2.3509827,17.839996,2,16,2z</Geometry>
    <!--#endregion-->
    
    <!--#endregion-->
    
    <!--#region Geometry-->
 
    <Geometry x:Key="Test">M0,0L32,0 16,19.745z</Geometry>

    <!--#endregion-->

    <!--#region Button-->

    <!--#region Base-->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template" Value="{DynamicResource ButtonBaseControlTemplate}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryDarkColor}" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="{DynamicResource ShadowColor}" Opacity="0.5" />
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
        </Style.Setters>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
               Storyboard.TargetProperty="Effect.BlurRadius"
               To="0" Duration="0:0:0.2"
               AutoReverse="True" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="16">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SecondaryLightColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryLightColor}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SecondaryDarkColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryDarkColor}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledColor}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource TextOnDarkColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region TranspButton-->
    <Style x:Key="TranspButton" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template" Value="{DynamicResource TranspButtonBaseControlTemplate}"/>
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" BlurRadius="4" Color="{DynamicResource ShadowColor}"  Opacity="0.5"/>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
               Storyboard.TargetProperty="Effect.ShadowDepth"
               To="0" Duration="0:0:0.2"
               AutoReverse="True" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!--Меньше анимаций богу анимаций-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1.15" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1.15" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="-4" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].Y" To="-4" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].Y" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="TranspButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextOnDarkColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region MenuIconed-->
    <Style x:Key="MenuIconed" TargetType="{x:Type Button}" BasedOn="{StaticResource TranspButton}">
        <Style.Setters>
            <Setter Property="Template" Value="{DynamicResource MenuIconedBaseControlTemplate}"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="{DynamicResource ShadowColor}"  Opacity="0"/>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="MenuIconedBaseControlTemplate" TargetType="{x:Type ButtonBase}" >
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryLightColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextOnDarkColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region MenuIconedDanger-->
    <Style x:Key="MenuIconedDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource TranspButton}">
        <Style.Setters>
            <Setter Property="Template" Value="{DynamicResource MenuIconedDangerBaseControlTemplate}"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="{DynamicResource ShadowColor}"  Opacity="0"/>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="MenuIconedDangerBaseControlTemplate" TargetType="{x:Type ButtonBase}" >
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="Red"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextOnDarkColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#endregion-->

    <!--#region ListBox-->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="10,10,0,10"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource SecondaryColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
        </Style.Resources>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid-->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
        <Setter Property="Padding" Value="5,5,5,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextOnLightColor}"/>
    </Style>


    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}"/>
        <Setter Property="AlternatingRowBackground" Value="Transparent"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
                <!--<Setter Property="Height" Value="40"/>-->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
                <Setter Property="DataGridTextColumn.Foreground" Value="{DynamicResource TextOnDarkColor}"/>
                <Setter Property="DataGridTextColumn.FontSize" Value="{DynamicResource FontSizeNormal}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" >
                <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                <Setter Property="DataGridTextColumn.Foreground" Value="{DynamicResource TextOnDarkColor}"/>
                <!--<Setter Property="Height" Value="40"/>-->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="DataGridTextColumn.FontSize" Value="{DynamicResource FontSizeNormal}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SellStyleRightAlign" TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Label-->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource DisabledColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="SelectionBrush" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="SelectionOpacity" Value="0.5"/>
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="{DynamicResource PrimaryColor}" BorderThickness="0,0,0,2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource DisabledColor}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource DisabledColor}"/>
                                <Setter Property="BorderThickness" TargetName="bg" Value="0,0,0,1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region InfoTextBox-->
    <Style x:Key="InfoTextBox" TargetType="{x:Type TextBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="SelectionBrush" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="SelectionOpacity" Value="0.5"/>
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="2,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="{DynamicResource SecondaryColor}" BorderThickness="0,0,0,0">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource SecondaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource SecondaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource SecondaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region PasswordBox-->
    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="SelectionOpacity" Value="0.5"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="bg" BorderBrush="{DynamicResource PrimaryColor}" BorderThickness="0,0,0,2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region TabControl-->
    <Style x:Key="TempTab" TargetType="{x:Type TabItem}">

        <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="Margin" Value="0,0,4,0"/>
        <Setter Property="Tag" Value="160"/>
        <Setter Property="Template">
            <!--{Binding RelativeSource={RelativeSource Self}, Path=Tag}-->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,0,0" Background="{DynamicResource AlternativeBackgroundColor}"
                  BorderBrush="Transparent" BorderThickness="0,0,0,0" CornerRadius="0" Width="55">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                              ContentSource="Header" Margin="0"
                              RecognizesAccessKey="True">
                            </ContentPresenter>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundColor}" />
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Scroll-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource ScrollWidth}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="5" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ProgressBar-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="IsIndeterminate" Value="True" />
            <Setter Property="Panel.ZIndex" Value="100"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource PrimaryColor}"
                  BorderBrush="{DynamicResource PrimaryColor}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource PrimaryColor}" 
                  BorderBrush="{DynamicResource PrimaryColor}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{DynamicResource PrimaryColor}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource SecondaryLightColor}"

                                BorderThickness="1"
                                BorderBrush="{DynamicResource PrimaryColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource TextOnDarkColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="6"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region CheckBox-->
    <Style x:Key="CheckRadioFocusVisual">
        <Style.Setters>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.002" Value="14"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.002" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10">
                                <Canvas>
                                    <Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="180" />
                                        </Border.Effect>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource CheckedColor}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource UncheckedColor}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TreeView-->
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region TreeViewItem-->
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Slider-->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Name="outerBorder"
                            Background="{DynamicResource DisabledColor}"
                            BorderBrush="{DynamicResource DisabledColor}"
                            Height="1" Width="1" Opacity="1" BorderThickness="2" CornerRadius="12"/>
                        <Border Name="innerBorder"
                            Background="{DynamicResource SecondaryDarkColor}"
                            BorderBrush="{DynamicResource SecondaryDarkColor}"
                            Height="16" Width="16" CornerRadius="8" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource SecondaryLightColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource DisabledColor}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource DisabledColor}" />
                            <Setter TargetName="innerBorder" Property="Width" Value="4" />
                            <Setter TargetName="innerBorder" Property="Height" Value="4" />
                            <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{DynamicResource SecondaryDarkColor}" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
            <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="{DynamicResource SecondaryColor}"
                HorizontalAlignment="Center" Width="4" />
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="{DynamicResource SecondaryDarkColor}" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{DynamicResource SecondaryDarkColor}" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
            <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="{DynamicResource SecondaryColor}"
                VerticalAlignment="Center" Height="4" />
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="{DynamicResource SecondaryDarkColor}" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MyFocusVisualStyte" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="{DynamicResource PrimaryColor}" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisualStyte}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1" BorderBrush="{DynamicResource SecondaryDarkColor}" Background="{DynamicResource SecondaryDarkColor}" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1" BorderBrush="{DynamicResource SecondaryDarkColor}" Background="{DynamicResource SecondaryDarkColor}" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="10" Width="10" Fill="{DynamicResource PrimaryColor}"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Slider"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- ReSharper disable once InconsistentNaming -->
    <Style x:Key="Horizontal_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region StaticCheckBox-->
    <Style x:Key="StaticCheckBox" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="IsEnabled" Value="false"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                         Background="Transparent"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="0"
                                       ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                          HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                          Data="{DynamicResource Yes}"
                                         Stretch="Uniform"
                                         Stroke="{DynamicResource CheckedColor}"
                                            Fill="{DynamicResource CheckedColor}"
                                        StrokeThickness="0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                             HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                             RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Data" Value="{DynamicResource No}" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource UncheckedColor}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Data" Value="{DynamicResource Yes}" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource CheckedColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--#endregion-->

    <!--#region NoPaddingTabControl-->
    <Style TargetType="{x:Type TabItem}">

        <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0" Background="{DynamicResource AlternativeBackgroundColor}"
                  BorderBrush="Transparent" BorderThickness="0" CornerRadius="0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" Margin="0"
                              RecognizesAccessKey="True">
                            </ContentPresenter>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundColor}" />
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Radiobutton-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Fill="{DynamicResource SecondaryColor}" MinWidth="10" MinHeight="10" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="5,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="radioButtonBorder" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource DisabledColor}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource DisabledColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource DisabledColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource SecondaryDarkColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource SecondaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tooltip-->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="{DynamicResource ShadowColor}" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Popup-->
    <Style x:Key="TextPopup" TargetType="{x:Type Popup}">
        <Style.Setters>
            <Setter Property="Placement" Value="Top"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="PopupAnimation" Value="Fade"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="Child">
                <Setter.Value>
                    <TextBlock Background="Transparent" Foreground="{DynamicResource TextOnLightColor}" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="2" Color="{DynamicResource ShadowColor}" />
                        </TextBlock.Effect>
                    </TextBlock>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region ListBoxSimple-->
    <Style x:Key="ListBoxSimpleItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="2,4,0,2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource SecondaryColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxSimple" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxSimpleItem}"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
        </Style.Resources>
    </Style>
    <!--#endregion-->

    <!--#region Menus-->

    <!--#region Menu-->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{DynamicResource PrimaryLightColor}"
                BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 

        ContentSource="Header"
        RecognizesAccessKey="True" 
                    />
                <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                    <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{DynamicResource AlternativeBackgroundColor}"
          BorderBrush="{DynamicResource PrimaryColor}"
          BorderThickness="1" >
                        <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{DynamicResource PrimaryColor}"/>
                <Setter TargetName="Border" Property="BorderBrush"
              Value="Transparent"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,2,2,2"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
        ContentSource="Header"
        RecognizesAccessKey="True" 
                    HorizontalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{DynamicResource PrimaryColor}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
              Value="{DynamicResource DisabledColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                <Border
                    Grid.Column="0" Name="Check"  
        Width="13" Height="13" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="{DynamicResource PrimaryColor}"
        BorderThickness="1"
        BorderBrush="{DynamicResource PrimaryColor}">
                    <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="{DynamicResource SecondaryColor}"
          StrokeThickness="2"
          Margin="3,0"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        Margin="16,4,0,4" 
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                <Label x:Name="InputGestureText"
        Grid.Column="2"
        Content="{TemplateBinding InputGestureText}"
        Margin="4,0,4,0"
        DockPanel.Dock="Right" 
        Foreground="{DynamicResource PrimaryLightColor}"
        FontSize="{DynamicResource FontSizeSmall}"
        VerticalContentAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{DynamicResource SecondaryLightColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        Margin="16,4,0,4"
        RecognizesAccessKey="True"/>
                <Label x:Name="InputGestureText"
        Grid.Column="2"
        Content="{TemplateBinding InputGestureText}"
        Margin="4,0"
        DockPanel.Dock="Right"
        Foreground="{DynamicResource PrimaryLightColor}"
        FontSize="{DynamicResource FontSizeSmall}"
        VerticalContentAlignment="Center"/>
                <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Margin="3,0"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{DynamicResource SecondaryColor}" />
                <Popup 
        Name="Popup"
        Placement="Right"
        HorizontalOffset="4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                    <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{DynamicResource AlternativeBackgroundColor}"
          BorderBrush="{DynamicResource PrimaryColor}"
          BorderThickness="1" >
                        <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{DynamicResource SecondaryLightColor}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,2,2,2"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnLightColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBig}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnDarkColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyHighlight}"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBig}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource PrimaryLightColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region ContextMenu-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                Background="{DynamicResource AlternativeBackgroundColor}"
                BorderThickness="2" BorderBrush="{DynamicResource PrimaryColor}">

                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#endregion-->
    
    <!--#region GridDash-->
    <Style x:Key="GridDash" TargetType="{x:Type Grid}">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="{DynamicResource ShadowColor}" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Grid.Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="16" Color="{DynamicResource ShadowColor}" Opacity="0.4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region ColorPicker-->
    <Style TargetType="{x:Type xctk:ColorPicker}">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="DisplayColorAndName" Value="True"/>
            <Setter Property="ShowDropDownButton" Value="False"/>
            <Setter Property="ShowAvailableColors" Value="True"/>
            <Setter Property="ShowStandardColors" Value="False"/>
            <Setter Property="AvailableColorsHeader" Value="  "/>
            <Setter Property="StandardButtonHeader" Value="  "/>
            <Setter Property="AdvancedButtonHeader" Value="  "/>
            <Setter Property="ColorMode" Value="ColorPalette"/>
            <Setter Property="Template" Value="{DynamicResource ColorPickerControlTemplate1}"/>
            <Setter Property="AvailableColors" Value="{Binding MaterialColorsCollection, Source={x:Static local:ColorCollections.ColorCollection}}"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="{DynamicResource ShadowColor}" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsOpen" Value="True">
                <Setter Property="xctk:ColorPicker.Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="{DynamicResource ShadowColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ColorPickerControlTemplate1" TargetType="{x:Type xctk:ColorPicker}">
        <Grid>
            <ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" Padding="{TemplateBinding Padding}" Style="{TemplateBinding ButtonStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                <ToggleButton.IsHitTestVisible>
                    <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <xctk:InverseBoolConverter/>
                        </Binding.Converter>
                    </Binding>
                </ToggleButton.IsHitTestVisible>
                <Grid Margin="2">
                    <ContentControl x:Name="ColorOnly">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Border>
                                                <Border.Background>
                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing Brush="White">
                                                                    <GeometryDrawing.Geometry>
                                                                        <RectangleGeometry Rect="0,0,100,100"/>
                                                                    </GeometryDrawing.Geometry>
                                                                </GeometryDrawing>
                                                                <GeometryDrawing Brush="LightGray">
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>
                                                                            <RectangleGeometry Rect="0,0,50,50"/>
                                                                            <RectangleGeometry Rect="50,50,50,50"/>
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                </GeometryDrawing>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Border.Background>
                                                <Rectangle>
                                                    <Rectangle.Fill>
                                                        <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                            <Binding.Converter>
                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Border>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
                        <StackPanel Orientation="Horizontal">
                            <ContentControl BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}" BorderThickness="1" HorizontalAlignment="Left" Margin="2,1,4,1" Width="20">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Border>
                                                        <Border.Background>
                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                <DrawingBrush.Drawing>
                                                                    <DrawingGroup>
                                                                        <GeometryDrawing Brush="White">
                                                                            <GeometryDrawing.Geometry>
                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                            </GeometryDrawing.Geometry>
                                                                        </GeometryDrawing>
                                                                        <GeometryDrawing Brush="LightGray">
                                                                            <GeometryDrawing.Geometry>
                                                                                <GeometryGroup>
                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                </GeometryGroup>
                                                                            </GeometryDrawing.Geometry>
                                                                        </GeometryDrawing>
                                                                    </DrawingGroup>
                                                                </DrawingBrush.Drawing>
                                                            </DrawingBrush>
                                                        </Border.Background>
                                                        <Rectangle>
                                                            <Rectangle.Fill>
                                                                <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                    <Binding.Converter>
                                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Border>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                            <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </ToggleButton>
            <Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" PopupAnimation="Slide" StaysOpen="False" ToolTip="" VerticalOffset="1" VerticalAlignment="Bottom">
                <Popup.Resources>
                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                        <Style.Triggers>
                            <Trigger Property="Content" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Popup.Resources>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Padding="3" >
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="_colorPaletteHost" Margin="4" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowAvailableColors">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Background="Transparent" Margin="0,0,0,1" Padding="2" Text="{TemplateBinding AvailableColorsHeader}"/>
                                    <ListBox x:Name="PART_AvailableColors" ItemsSource="{TemplateBinding AvailableColors}" Grid.Row="1">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" Width="250"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                            <Grid.Resources>
                                                                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                    <Style.Triggers>
                                                                                        <Trigger Property="Content" Value="">
                                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                                        </Trigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Grid.Resources>
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                            <DataTrigger Binding="{Binding DisplayColorAndName, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                            </DataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}" BorderThickness="0" Margin="0">
                                                                    <Border.Background>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="Transparent">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Border.Background>
                                                                    <Rectangle Height="25" Width="25">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill">
                                                                                    <Setter.Value>
                                                                                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                                                                        <Binding Path="Color">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="SelectionMode" Value="Single"/>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowStandardColors">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Background="Transparent" Margin="0,1" Padding="2" Text="{TemplateBinding StandardColorsHeader}"/>
                                    <ScrollViewer Grid.Row="1" Height="300">
                                        <ListBox x:Name="PART_StandardColors" >
                                            <ListBox.Style>
                                                <Style TargetType="{x:Type ListBox}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel IsItemsHost="True" Width="200"/>
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="ItemContainerStyle">
                                                        <Setter.Value>
                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                            <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                <Grid.Resources>
                                                                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                        <Style.Triggers>
                                                                                            <Trigger Property="Content" Value="">
                                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                                            </Trigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Grid.Resources>
                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                </Trigger>
                                                                                <DataTrigger Binding="{Binding DisplayColorAndName, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                    <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                </DataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="ItemTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                        <Border.Background>
                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                <DrawingBrush.Drawing>
                                                                                    <DrawingGroup>
                                                                                        <GeometryDrawing Brush="White">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <GeometryGroup>
                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                </GeometryGroup>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                    </DrawingGroup>
                                                                                </DrawingBrush.Drawing>
                                                                            </DrawingBrush>
                                                                        </Border.Background>
                                                                        <Rectangle Height="14" Width="14">
                                                                            <Rectangle.Style>
                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                    <Setter Property="Fill">
                                                                                        <Setter.Value>
                                                                                            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                                                                            <Binding Path="Color">
                                                                                                <Binding.Converter>
                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                </Binding.Converter>
                                                                                            </Binding>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Rectangle.Style>
                                                                        </Rectangle>
                                                                    </Border>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                </Style>
                                            </ListBox.Style>
                                        </ListBox>
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                            <Grid Margin="0,1" Grid.Row="3">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowRecentColors">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="22"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Background="AliceBlue" Margin="0,1" Padding="2" Text="{TemplateBinding RecentColorsHeader}"/>

                                    <ListBox x:Name="PART_RecentColors" Grid.Row="1">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" Width="200"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                            <Grid.Resources>
                                                                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                    <Style.Triggers>
                                                                                        <Trigger Property="Content" Value="">
                                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                                        </Trigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Grid.Resources>
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                            <DataTrigger Binding="{Binding DisplayColorAndName, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                            </DataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                    <Border.Background>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Border.Background>
                                                                    <Rectangle Height="14" Width="14">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill">
                                                                                    <Setter.Value>
                                                                                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                                                                        <Binding Path="Color">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="SelectionMode" Value="Single"/>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>

                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="0" x:Name="_colorCanvasHost" Visibility="Collapsed">
                            <xctk:ColorCanvas BorderThickness="0" Background="Transparent" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                        <Separator HorizontalAlignment="Stretch" Margin="5,0" Grid.Row="1">
                            <Separator.Visibility>
                                <TemplateBinding Property="ShowAdvancedButton">
                                    <TemplateBinding.Converter>
                                        <BooleanToVisibilityConverter/>
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Separator.Visibility>
                        </Separator>
                        <Button x:Name="PART_ColorModeButton" Margin="5" Grid.Row="2">
                            <Button.Visibility>
                                <TemplateBinding Property="ShowAdvancedButton">
                                    <TemplateBinding.Converter>
                                        <BooleanToVisibilityConverter/>
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Button.Visibility>
                        </Button>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DisplayColorAndName" Value="True">
                <Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="ColorAndName" Value="Visible"/>
            </Trigger>
            <Trigger Property="ColorMode" Value="ColorPalette">
                <Setter Property="Visibility" TargetName="_colorPaletteHost" Value="Visible"/>
                <Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Collapsed"/>
                <Setter Property="Content" TargetName="PART_ColorModeButton" Value="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="ColorMode" Value="ColorCanvas">
                <Setter Property="Visibility" TargetName="_colorPaletteHost" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Visible"/>
                <Setter Property="Content" TargetName="PART_ColorModeButton" Value="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="ShowDropDownButton" Value="False">
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->
</ResourceDictionary>